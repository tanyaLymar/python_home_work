"""
Задание 2. Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.
Решите через рекурсию. В задании нельзя применять циклы.
Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""
count_even = 0
count_odd = 0
def even_odd_digits(n, count_even, count_odd):

    if n == 0:
        return count_even, count_odd
    else:
        n_remainder = n % 10
        n = n // 10
        if n_remainder % 2 == 0:
            return even_odd_digits(n, count_even + 1, count_odd)
        else:
            return even_odd_digits(n, count_even, count_odd + 1)
flag = True
while flag:
    try:
        number_value = int(input("Введите число: "))
        print(f"Количество четных и нечетных цифр в числе соответственно равно:"
              f" {even_odd_digits(number_value, count_even, count_odd)}")
        flag = False
    except ValueError:
        print("Введенное вами значение не является числом")